// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  pets      Pet[]
}

model Pet {
  id          String   @id @default(cuid())
  name        String
  type        String // Köpek, Kedi, Tavşan, Kuş
  breed       String // Irk
  age         Int
  gender      String // Erkek, Dişi
  personality String // Karakter özellikleri
  hobbies     String // Hobiler
  description String // Açıklama
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  matches     Match[]  @relation("PetMatches")
  matchedWith Match[]  @relation("MatchedWith")
}

model Match {
  id           String   @id @default(cuid())
  petId        String
  matchedPetId String
  status       String   @default("pending") // pending, accepted, rejected
  pet          Pet      @relation("PetMatches", fields: [petId], references: [id])
  matchedWith  Pet      @relation("MatchedWith", fields: [matchedPetId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([petId, matchedPetId])
}
